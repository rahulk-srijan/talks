<?php
DEFINE("library_vocab_id",5);

/*
 * hook_init()
 */

global $library_subsite_variable;
global $color_variable;
$library_subsite_variable = array();
$channel_term = taxonomy_get_tree(library_vocab_id);
foreach($channel_term as $name) {
    $email_val = '';
    $color_class = '';
    $channel_fields = taxonomy_term_load($name->tid);
    if(isset($channel_fields->field_suggest_video_email)) {
        foreach($channel_fields->field_suggest_video_email['und'] as $mail) {
            $email_val .= $mail['email'] . t(",");
        }
    }
    $desc = strip_tags($name->description);
    $publish = $channel_fields->field_publish_channel['und'][0]['value'];
    $private = $channel_fields->field_private_channel['und'][0]['value'];
    $channel_url = $channel_fields->field_channel_url['und'][0]['value'];
    // Main color fetch
    $selected_color = $channel_fields->field_color_title['und'][0]['rgb'];
    foreach($color_variable as $key => $color_val) {
        if($selected_color == $color_val) {
            $color_class = $key;
        }
    }
    $library_subsite_variable[$name->tid] = array(
            'to' => $email_val,
            'subject' => 'Suggest a video',
            'msg' => 'I recommend adding the following video to the ' . $desc .' video library',
            'site_name' => $desc,
            'recommend_text' => ' recommends an '. $desc.' video.',
            'is_publish' => $publish,
            'is_private' => $private,
            'color-class' => $color_class,
            'channel_path' => $channel_url,
            'tid' => $name->tid,
    );    
}


/**
 * Implements hook_block_info().
 */
function videolibrary_core_block_info() {
    $blocks = array();
    $blocks['site_switching'] = array(
        'info' => t('Video Library Site Switching Menu'),
    );
    $blocks['category_menu'] = array(
        'info' => t('Category Menu For All Library'),
    );

    return $blocks;
}

function videolibrary_core_block_view($delta = '') {
        switch ($delta) {
        case 'site_switching':
            $block['subject'] = null; // Most forms don't have a subject
//    $block['content'] = noti_block_view();
            $block['content'] = site_switching();
            break;
        case 'category_menu':
            $block['subject'] = null; // Most forms don't have a subject
//    $block['content'] = noti_block_view();
            $block['content'] = category_menu();
            break;
    }
    return $block;
}

/*
 *
 */

function site_switching() {
    $terms = taxonomy_get_tree(5);
    $content = '<ul class="sites_switch">';
    foreach ($terms as $val) {
        $content .='<li>' . l($val->name, $val->name . '') . '</li>';
    }
    $content .='</ul>';
    return $content;
}

/*
 * Category Menu For all Library
 */

function category_menu() {
    global $user;
    global $subsite_home_page_url;
    $vocab_name = 'channel_categories' ;
    $homeclass = '';
    $tagsclass = '';
    
    if(arg(0) == 'taxonomy' && is_numeric(arg(2))) {
        if(arg(2) != '') {
            $term = taxonomy_term_load(arg(2));
            if($term->vid == 5) {
                $arg2 = arg(2);
            }
            else {
                $arg2 = $term->field_library['und'][0]['tid'];
            }
        }
    }
    $category_name = '';

    if(arg(0) == 'tags' && $arg2 == '') {
        $arg2 = arg(1);
        $tid = taxonomy_get_term_by_name(arg(1), 'library');
        $arg2 = key($tid);
        $tagsclass = 'selected';
    }
   
    $check = db_query("SELECT entity_id FROM field_data_field_library WHERE field_library_tid=:tid AND bundle=:bundle",
                    array(':tid'=>$arg2,':bundle'=>$vocab_name))->fetchField();
    if($check != '') {
        $term = taxonomy_term_load($arg2);
        $tname = strtolower($term->name);
        $tag_url = t("tags/".$term->name);
    
        $browse_url = url("taxonomy/term/$arg2");
        if(arg(0) != 'tags')
            $homeclass = 'selected';
        $query = db_query("SELECT td.name,td.tid FROM taxonomy_term_data td, field_data_field_library fl
                    WHERE fl.bundle=:bundle AND fl.field_library_tid=:tid AND fl.entity_id=td.tid",
                    array(':bundle'=>$vocab_name,':tid'=>$arg2))->fetchAll();
    }
    else {
        $get_channel_id = db_query("SELECT field_library_tid FROM field_data_field_library WHERE entity_id=:id AND bundle=:bundle",
                            array(':id'=>$arg2,':bundle'=>$vocab_name))->fetchField();
        if($get_channel_id == '')   {
            $channel_id = $arg2;
        }
        else {
            $channel_id = $get_channel_id;
        }
        $query = db_query("SELECT td.name,td.tid FROM taxonomy_term_data td, field_data_field_library fl
                        WHERE fl.bundle=:bundle AND fl.field_library_tid=:tid AND fl.entity_id=td.tid",
                        array(':bundle'=>$vocab_name,':tid'=>$channel_id))->fetchAll();
        $browse_url = url("taxonomy/term/$channel_id");
        $term = taxonomy_term_load($channel_id);
        $channel_name = strtolower($term->name);
        $tag_url = t("tags/".$channel_name);
    }
    if(isset($_GET['ch_tid'])) {
        $ch_tid = $_GET['ch_tid'];
    }
    else {
        if(arg(2) != '') {
            $term = taxonomy_term_load(arg(2));
            if($term->vid == 5) {
                $ch_tid = arg(2);
            }
            else {
                $ch_tid = $term->field_library['und'][0]['tid'];
            }
        }
    }
    $category_name .= '<div class="block view-views-by-category" id="block-views-views-by-category-block">
                    <div class="block-content content">
                        <div class="left-side-menu">
                            <ul>
                                <li class="view-all ' . $homeclass . '"><a href="' . $browse_url . '">View All</a></li>
                                <li class="by-tags ' . $tagsclass . '">'. l('By Tags',$tag_url,array('query'=>array('ch_tid'=>$ch_tid))) .'</li>
                                <li class="by-category">By Category</li>
                            </ul>';

                        $category_name .= '<ul class="category-list">';
                            foreach ($query as $row) {
                                if (arg(2) == $row->tid) {
                                  $category_name .='<li>' . l($row->name, 'taxonomy/term/' . $row->tid, array('attributes' => array('class' => array('active')))) . '</li>';
                                } else {
                                    $category_name .='<li>' . l($row->name, 'taxonomy/term/' . $row->tid) . '</li>';
                                }   
                            }
                        $category_name .= '</ul>';
    $category_name .= '</div></div></div>';
    return $category_name;
}

function user_library_permission($arg)
{
    global $user;
    $roles = $user->roles;
    $show_block = false;
    if($arg == 'partner_entrepreneurship')
    {
        if(in_array('entrepreneur web master', $roles) || in_array('entrepreneur user', $roles) || in_array('administrator', $roles) || in_array('super admin', $roles)|| in_array('ors entrepreneur user', $roles))
        {
            $show_block = true;
        }
    }elseif($arg == 'competetowin')
    {
        if(in_array('compete to win web master', $roles) || in_array('compete to win user', $roles) || in_array('administrator', $roles) || in_array('super admin', $roles) || in_array('ors compete to win user', $roles))
        {
            $show_block = true;
        }
    }
    else
    {
        $show_block = true;
    }
    return $show_block;
}

function user_top_menu_link() {
    global $library_subsite_variable;
    global $subsite_home_page_url;
    global $user;
    global $base_url;
    $suggest_url = $base_url.'/suggest/nojs';
    $is_front = drupal_is_front_page();
    
    $content = '';
    $content .= '<div id="authorize"><ul class="user">';

    $profile_url = '';
    $role = 'contractor';
    if (in_array($role, array_values($user->roles))) {
        $profile_url = "http://home.intranet.mckinsey.com/ks/research/home/welcome";
    } else {
        $profile_url = 'http://home.intranet.mckinsey.com/profiles/people/' . $_SERVER['HTTP_VENDORID'];
    }
    if ($user->uid != 0) {
        $content .='<li class="first">' . t('Welcome ') . '<a href="' . $profile_url . '" target="_blank">' . $user->name . '</a></li>';
        $content .='<li class="second"><a href="' . url('newsletter/subscriptions') . '">My Notifications</a></li>';

        $adminRoles = array("orginaction"=>"org web master", "opsinaction"=> "ops web master", "btoacademy" => "bto web master" ,"admin"=>"administrator","super admin"=>"super admin","ourtechnology"=>"our technology web master","mi_matters"=>"mi matters web master","partner_entrepreneurship"=>"entrepreneur web master","competetowin"=>"compete to win web master");
        $device = array('ipad', 'iphone');
        foreach ($adminRoles as $value=>$role) {
            if (in_array($role, $user->roles) && !(bool) strpos($_SERVER['HTTP_USER_AGENT'], 'iPad') && !(bool) strpos($_SERVER['HTTP_USER_AGENT'], 'iPhone')) {
                if(function_exists('get_node_type')) {
                    $node_type = get_node_type(arg(1)); // called from custom_channel.module
                }
                    if((arg(0) == 'taxonomy' && is_numeric(arg(2)) || $node_type == 'upload_video')) {
                        if(arg(2) != '') {
                            $arg = arg(2);
                        }
                        else {
                            if(function_exists('get_channel_tid_from_node')) {
                                $arg = get_channel_tid_from_node(arg(1));// called from custom_channel.module
                            }
                        }
                        $options = array('query'=>array("channel_tid"=>$arg));
                        $admin_link = '<li class="third">' . l("Admin", "admin/dashboard",$options) . '</li>';
                    }
                    else if(isset($_GET['ch_tid'])) {
                        if(function_exists('get_channel_tid_from_node')) {
                            $arg = $_GET['ch_tid'];
                        }
                        $options = array('query'=>array("channel_tid"=>$arg));
                        $admin_link = '<li class="third">' . l("Admin", "admin/dashboard",$options) . '</li>';
                    }
                    else {
                        $admin_link = '';
                    }
                    $content .= $admin_link;
                    break;
            }
        }
    } else {
        $content .='<li class="first"><a href="' . url('user') . '">' . t('Login') . '</a></li>';
    }
    $content .='
<li class="last hidden-phone"><a id="suggest-link" class="ctools-use-modal ctools-modal-modal-popup-medium" href="'.$suggest_url .'">Suggest a Video</a></li>

<li class="feedback"><a href="mailto:mckinsey_talks_feedback@mckinsey.com?Subject=Feedback on McKinsey Talks&body=">
Feedback</a></li>
<li class="last"><a href="#">How to suggest a video</a>
<div class="modal">
  <div class="modal-header">
    <button type="button" class="close">&times;</button>
    <h3>How to suggest a video</h3>
  </div>
  <div class="modal-body">
    <p>For security reasons, you can only suggest a video from the desktop version of the video library. The link is located on the top navigation bar.</p>
  </div>
</li>
</ul>
<p class="copyright">&#169; 1996-' . $date = date("Y") . $date . ' McKinsey & Company</p></div>';
    return $content;
}

function videolibrary_core_views_api() {
    return array(
        'api' => 3,
    );
}

function videolibrary_core_views_query_alter(&$view, &$query) {
    if ($view->name == 'logging') {
        //dsm($query, 'before');
        // Adding OR condition for the contextual filters.
        $query->where[0]['type'] = 'OR';
    }
    
    /*if($view->name == 'listing_by_tags') {
        if($view->current_display == 'page_11') {
            $tid = taxonomy_get_term_by_name(arg(1), 'library');
            $channel_id = key($tid);
            $query->where[1]['conditions'][2]['value'] = $channel_id;
            $query->where[1]['conditions'][2]['operator'] = '=';
        }
    }*/
}

function videolibrary_core_views_pre_render(&$view) {
  /*if($view->name == 'most_liked_lib_craousel'){
    $temp = array();
    if ($view->result['6']->taxonomy_term_data_name == 'partner_entrepreneurship'){
        if ($view->result['1']->taxonomy_term_data_name == 'competetowin')  {
            $temp['0'] = $view->result['6'];
            $view->result['6'] = $view->result['5'];
            $view->result['5'] = $view->result['4'];
            $view->result['4'] = $view->result['3'];
            $view->result['3'] = $view->result['2'];
            $view->result['2'] = $temp['0'];
        }
    }
    elseif ($view->result['5']->taxonomy_term_data_name == 'partner_entrepreneurship'){
        $temp['0'] = $view->result['5'];
        // $view->result['6'] = $view->result['5'];
        $view->result['5'] = $view->result['4'];
        $view->result['4'] = $view->result['3'];
        $view->result['3'] = $view->result['2'];
        $view->result['2'] = $view->result['1'];
        if ($view->result['1']->taxonomy_term_data_name == 'competetowin')  {
        }
        else  {
          $view->result['1'] = $temp['0'];
       }
    }
    elseif ($view->result['4']->taxonomy_term_data_name == 'partner_entrepreneurship'){
        $temp['0'] = $view->result['4'];
        // $view->result['6'] = $view->result['5'];
        // $view->result['5'] = $view->result['4'];
        $view->result['4'] = $view->result['3'];
        $view->result['3'] = $view->result['2'];
        $view->result['2'] = $view->result['1'];
        if ($view->result['1']->taxonomy_term_data_name == 'competetowin')  {
        }
        else  {
          $view->result['1'] = $temp['0'];
       }
    }
    elseif ($view->result['3']->taxonomy_term_data_name == 'partner_entrepreneurship'){
        $temp['0'] = $view->result['3'];
        // $view->result['6'] = $view->result['5'];
        // $view->result['5'] = $view->result['4'];
        // $view->result['4'] = $view->result['3'];
        $view->result['3'] = $view->result['2'];
        $view->result['2'] = $view->result['1'];
        if ($view->result['1']->taxonomy_term_data_name == 'competetowin')  {
        }
        else  {
          $view->result['1'] = $temp['0'];
       }
    }
  }*/
  if($view->name=='global_popular_video') {
    // Get most popular from 1st library
    $result1 = $view->result;
    // Get most popular from 2nd library
    $result2 = views_get_view_result('global_popular_video', $display_id = 'block_1');
    // Get most popular from 3rd library
    $result3 = views_get_view_result('global_popular_video', $display_id = 'block_2');
    // Get most popular from 4th library
    $result4 = views_get_view_result('global_popular_video', $display_id = 'block_3');
     // Get most popular from 5th library
    $result5 = views_get_view_result('global_popular_video', $display_id = 'block_4');
    // Get most popular from 5th library
    $result6 = views_get_view_result('global_popular_video', $display_id = 'block_5');


    // Merge the result arrays
    $new_double = array_merge($result1, $result2);
    $new_triple = array_merge($new_double, $result3);
    $new_fourth = array_merge($new_triple,$result4);
    $new_fifth = array_merge($new_fourth,$result5);
    // $new_sixth = array_merge($new_fifth,$result6);
    shuffle($new_fifth);
    // Final result array is a combination of the 2 libraries
    // $view->result = $new_sixth;
    $view->result = $new_fifth;
  }
}

function videolibrary_core_form_alter(&$form, &$form_state, $form_id) {
    if($form_id=='upload_video_node_form') {
        $form['field_library']['und']['#options'][536]='Spotlight';
        $form['field_library']['und']['#options'][457]='BTO Academy';
        $form['field_library']['und']['#options'][456]='Ops in Action';
        $form['field_library']['und']['#options'][455]='Org in Action';
        $form['field_library']['und']['#options'][609]='Our Technology';
        $form['field_library']['und']['#options'][610]='MI Matters';
        $form['field_library']['und']['#options'][611]='Entrepreneurship Stories';
        $form['field_library']['und']['#options'][612]='Compete to Win';
    }

    if($form_id=='views_exposed_form') {
    $form['field_library_tid']['#options'][536] ='Spotlight';
    $form['field_library_tid']['#options'][457] ='BTO Academy';
    $form['field_library_tid']['#options'][456] ='Ops in Action';
    $form['field_library_tid']['#options'][455] ='Org in Action';
    $form['field_library_tid']['#options'][609] ='Our Technology';
    $form['field_library_tid']['#options'][610] ='MI Matters';
    $form['field_library_tid']['#options'][611] ='Entrepreneurship Stories';
    $form['field_library_tid']['#options'][612] ='Compete to Win';
    asort($form['field_library_tid']['#options']);
     global $user;
    $role = $user->roles;
    $private_entre= array('ors entrepreneur user', 'entrepreneur user', 'administrator', 'super admin', 'entrepreneur web master');
    $result_entre = array_intersect($private_entre, $role);
    if(count($result_entre) == '0') {
        unset($form['field_library_tid']['#options'][611]);
    }
    $private_compete= array('ors compete to win user', 'compete to win user', 'administrator', 'super admin', 'compete to win web master');
    $result_compete = array_intersect($private_compete, $role);
    if(count($result_compete) == '0') {
        unset($form['field_library_tid']['#options'][612]);
    }
}
    if($form_id =='upload_video_node_form') {
        global $user;
    //    $orginaction =  "$form['field_library']['und']['#options'][455]";
        $library_roles = array(
            '455' => 'org web master' ,
            '456' => 'ops web master',
            '457' => 'bto web master',
            '536' => 'miscellaneous',
            '611' => 'entrepreneur web master',
            '612' => 'compete to win web master',
            '609'=> 'our technology web master',
            '610'=> 'mi matters web master',
             );
        $roles = user_roles();
        $current_user_role = $user->roles;
        $result = array_intersect($library_roles, $current_user_role);
        $result_count = count($result);
       // print_r($result);die();
        if(in_array('super admin', $current_user_role)) {
    return;}else{
        if($result_count==1) {
foreach($library_roles as $tid=>$role) {
    if(in_array($role, $current_user_role)) {
        $form = videolibrary_core_unset_field_library($form, $library_roles, $tid);
        //print_r($form);
    }
}
    }elseif($result_count > 1) {
        $diff= array_diff($library_roles,$result);
        foreach($diff as $key=>$value) {
            unset($form['field_library']['und']['#options'][$key]);
        }
}
else {
    return;
}
}
}

elseif ($form_id =='user_profile_form') {
    global $user;
    $current_user_roles = $user->roles;
    // Show all assignable roles to the super admin role
    if (!array_key_exists('8', $current_user_roles)) {
      $valid_roles = $form['account']['roleassign_roles']['#options'];
      unset($current_user_roles["2"]);
      $form['account']['roleassign_roles']['#options'] = $current_user_roles;
      if (array_key_exists('11', $current_user_roles)) {
      if(in_array('entrepreneur web master', $current_user_roles)){
      $current_user_roles['13'] = 'entrepreneur user';}
      $form['account']['roleassign_roles']['#options'] = $current_user_roles;
      }
      if (array_key_exists('12', $current_user_roles)) {
      if(in_array('compete to win web master', $current_user_roles)){
      $current_user_roles['14'] = 'compete to win user';}
      $form['account']['roleassign_roles']['#options'] = $current_user_roles;
      }
    }
  }
}

function videolibrary_core_unset_field_library($form,$library_roles,$tid) {
        unset($library_roles[$tid]);
        unset($form['field_library']['und']['#options']['_none']);
        foreach($library_roles as $key=>$value) {
            unset($form['field_library']['und']['#options'][$key]);
            }
         $form['field_library']['und']['#default_value']=$tid;

         return $form;
}

function videolibrary_core_node_view($node, $view_mode, $langcode) {
    //dsm($GLOBALS);
     //$device = array('ipad', 'iphone');
    if(isset($_SERVER["HTTP_X_FORWARDED_FOR"])) {
    ors_role_assign();
    }
    global $library_subsite_variable;
    $uri= $GLOBALS['_GET']['redirect'];
     if ((bool) strpos($_SERVER['HTTP_USER_AGENT'], 'iPad') && (bool) strpos($_SERVER['HTTP_USER_AGENT'], 'iPhone' && $uri= 'true')) {
     //    return;
     // }else {
    //dsm($GLOBALS);
        return;
    }
    elseif(($_SERVER['HTTP_REFERER']==NULL) && ($GLOBALS['_GET']['q'] == 'node/5')) {
    $flag = flag_get_flag('default');
    if($flag) {
   // $libs=array('455'=>'orginaction','456'=>'opsinaction','457'=>'btoacademy');
    foreach($library_subsite_variable as $channel) {
    if ($flag->is_flagged($channel['tid'])) {
      drupal_goto($channel['channel_path']);
    }
    }
}else {
    return;
}
}
}
//}
function videolibrary_core_menu() {
    $items = array();

    $items['suggest/%ctools_js'] = array(
    'page callback' => 'videolibrary_core_callback',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/services/partner_entrepreneurship_config'] = array(
    'title' => 'Entrepreneurship ORS Login configurations',
    'description' => 'Settings for the Entrepreneurship ORS login module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('videolibrary_core_ent_orslogin'),
    'access arguments' => array('administer entrepreneur site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/services/competetowin_config'] = array(
    'title' => 'Compete to Win ORS Login configurations',
    'description' => 'Settings for the Competetowin ORS login module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('videolibrary_core_comp_orslogin'),
    'access arguments' => array('administer compete to win site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
* Function hook_permission for entreprenuership and compete to win channels ors roles configuration.
**/
function videolibrary_core_permission() {
  return array(
    'administer entrepreneur site configuration' => array(
      'title' => t('administer entrepreneur site configuration'),
      'description' => t('administer entrepreneur site configuration.'),
      ),
      'administer compete to win site configuration' => array(
      'title' => t('administer compete to win site configuration'),
      'description' => t('administer compete to win site configuration.'),
      ),
  );
}

/**
 * Ajax menu callback.
 */
function videolibrary_core_callback($ajax) {
  if ($ajax) {
    ctools_include('ajax');
    ctools_include('modal');

    $form_state = array(
      'ajax' => TRUE,
      'title' => t('Suggest a Video'),
    );

    // Use ctools to generate ajax instructions for the browser to create
    // a form in a modal popup.
    $output = ctools_modal_form_wrapper('videolibrary_core_form', $form_state);

    // If the form has been submitted, there may be additional instructions
    // such as dismissing the modal popup.
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }

    // Return the ajax instructions to the browser via ajax_render().
    print ajax_render($output);
    drupal_exit();
  }
  else {
    return drupal_get_form('videolibrary_core_form');
  }
}

/**
 * Admin settings form
 */
function videolibrary_core_ent_orslogin($form_state) {
  $form = array();

  $checked = explode(',', variable_get('e_roles', 0));

  $options = array(t('APs'), t('Associates'), t('BAs'), t('Directors'), t('EMs'), t('Knowledge'), t('Office IT'), t('Principals'), t('Prof Spprt'), t('Short Term'), );

  $form['e_roles'] = array(
    '#type' => 'select',
    '#multiple' => TRUE,
    '#title' => t('To select more than one role, hold down the CTRL-key while clicking.'),
    '#required' => FALSE,
    '#options' => $options,
    '#size' => 10,
    '#weight' => 0,
    '#default_value' => $checked,
  );
  $form['submit'] = array(
    '#type'  => 'submit',
    '#value' => t('Submit'),
    );
  return $form;
}

function videolibrary_core_ent_orslogin_submit($form, &$form_state)  {
  $temp = implode(',', $form_state['values']['e_roles']);
  variable_set('e_roles', $temp);
}

/**
 * Admin settings form
 */
function videolibrary_core_comp_orslogin($form_state) {
  $form = array();

  $checked = explode(',', variable_get('c_roles', 0));

  $options = array(t('APs'), t('Associates'), t('BAs'), t('Directors'), t('EMs'), t('Knowledge'), t('Office IT'), t('Principals'), t('Prof Spprt'), t('Short Term'), );

  $form['c_roles'] = array(
    '#type' => 'select',
    '#multiple' => TRUE,
    '#title' => t('To select more than one role, hold down the CTRL-key while clicking.'),
    '#required' => FALSE,
    '#options' => $options,
    '#size' => 10,
    '#weight' => 0,
    '#default_value' => $checked,
  );
  $form['submit'] = array(
    '#type'  => 'submit',
    '#value' => t('Submit'),
    );
  return $form;
}

function videolibrary_core_comp_orslogin_submit($form, &$form_state)  {
  $temp = implode(',', $form_state['values']['c_roles']);
  variable_set('c_roles', $temp);
}


/**
 * Drupal form to be put in a modal.
 */
function videolibrary_core_form($form, $form_state) {
    global $library_subsite_variable;
    global $user;
    $roles = $user->roles;
    
    // For General Category addition
    $mail_to = 'McKinsey_Talks_Video_Suggestions@mckinsey.com';
    $subject = 'Suggest a video';
    $msg = 'I recommend adding the following video to the McKinsey Talks video library';
    $gen =  '<a class="lib" id="gen" href="mailto:' . $mail_to . '?Subject=' . $subject . '&body=' . $msg . '"> General </a><br/>';
    
    $form['lib_list_gen'] = array(
        '#type' => 'item',
        '#markup' => t("General"),
    );

    // For channel categories    
    $term = taxonomy_get_tree(library_vocab_id);
    foreach($term as $name) {
      // Show only published channel
      if($library_subsite_variable[$name->tid]['is_publish'] == '') {
        $ch_mail_to = $library_subsite_variable[$name->tid]['to'];
        $ch_subject = $library_subsite_variable[$name->tid]['subject'];
        $ch_msg = $library_subsite_variable[$name->tid]['msg'];
        $color_cls = $library_subsite_variable[$name->tid]['color-class'];
        $channel_name = $library_subsite_variable[$name->tid]['site_name'];
        $ch_name =  '<a class="'.$color_cls.'" id="gen" href="mailto:' . $ch_mail_to . '?Subject=' . $ch_subject . '&body=' . $ch_msg . '">'.$channel_name.'</a><br/>';
        $form['lib_list_'.$name->tid] = array(
          '#type' => 'item',
          '#markup' => $ch_name,
        );
      }  
    }
  
// For pivate channel
/*  $compete_roles = array('compete to win user','ors compete to win user','super admin','compete to win web master');
  $compete_result= array_intersect($compete_roles, $roles);
  if(!empty($compete_result)) {
  $form['lib_list_compete'] = array(
    '#type' => 'item',
    '#markup'=> $competetowin,
  );}
 $entre_roles = array('entrepreneur user','ors entrepreneur user','super admin','entrepreneur web master');
 $entre_result= array_intersect($entre_roles, $roles);
 if(!empty($entre_result)) {
 $form['lib_list_entre'] = array(
    '#type' => 'item',
    '#markup'=> $partner_entrepreneurship,
  );}
 */
    return $form;
}

/***
function hook_init()
**/
function videolibrary_core_init(){
    global $user;
    $roles = $user->roles;
    $private_access = true;
    $argument = explode('/', request_path());
    $arg = $argument[0];
    // ors_role_assign($user);
    // if(($_COOKIE['Drupal_visitor_entvalue'] != 'access_ent') ||
    //  (!in_array('ors entrepreneur user', $roles)) ||
    //     (!in_array('ors compete to win user', $roles)) ||
    //     ($_COOKIE['Drupal_visitor_compvalue'] != 'access_comp'))  {
        // ors_role_assign();

    //     }
    if($arg == 'partner_entrepreneurship')
    {
        // if($_COOKIE['Drupal_visitor_entvalue'] != 'access_ent' || !(in_array('ors entrepreneur user', $roles))){
        if(isset($_SERVER["HTTP_X_FORWARDED_FOR"])) {
            ors_role_assign();
        }
        $private_access = false;
        if(in_array('entrepreneur web master', $roles) || in_array('entrepreneur user', $roles) || in_array('administrator', $roles) || in_array('super admin', $roles) || in_array('ors entrepreneur user', $roles))
        {
            $private_access = true;
        }

    }elseif($arg == 'competetowin')
    {
        // if($_COOKIE['Drupal_visitor_compvalue'] != 'access_comp' || !(in_array('ors compete to win user', $roles))){

        if(isset($_SERVER["HTTP_X_FORWARDED_FOR"])) {
            ors_role_assign();
        }

        $private_access = false;
        if(in_array('compete to win web master', $roles) || in_array('compete to win user', $roles) || in_array('administrator', $roles) || in_array('super admin', $roles) || in_array('ors compete to win user', $roles))
        {
            $private_access = true;
        }
    }
    if(!$private_access){
        // drupal_access_denied();
        drupal_goto('content/access-denied');
    }
}

/*
* User Role Assign
*/

function user_role_assign($user, $role_name) {
   if ($user->uid) {
       $rid = get_role_id($role_name);
       if (!isset($user->roles[$rid])) {
           $roles = $user->roles + array($rid => $role_name);
           user_save($user, array('roles' => $roles));
           //  drupal_set_message('User is associated with the role');
       }
   }
}

/*
* Get Role Id
*/

function get_role_id($role_name) {
   return db_query("SELECT r.rid FROM {role} r WHERE r.name = :rname", array(':rname' => $role_name))->fetchField();
}

function ors_ent_role_access(){
    global $user;
    if (!in_array('ors entrepreneur user', $user->roles)){
    db_insert('users_roles')
        ->fields(array(
            'uid' => $user->uid,
            'rid' => 15,
            )
        )
        ->execute();
    }
    setcookie('ent', 'set');
    drupal_goto(request_path());
}

function ors_ent_role_denial(){
    global $user;
    if (in_array('ors entrepreneur user', $user->roles)){
        $cond = db_and()->condition('uid', $user->uid)->condition('rid', '15');
        db_delete('users_roles')->condition($cond)->execute();
    }
    // setcookie('ent', 'set');
        drupal_goto(request_path());

}

function ors_comp_role_access(){
    global $user;
    if (!in_array('ors compete to win user', $user->roles)){
    db_insert('users_roles')
        ->fields(array(
            'uid' => $user->uid,
            'rid' => 16,
            )
        )
        ->execute();
    }
    // setcookie('comp', 'set');
    drupal_goto(request_path());
}
function ors_comp_role_denial(){
    global $user;

    if (in_array('ors compete to win user', $user->roles)){
    $cond = db_and()->condition('uid', $user->uid)->condition('rid', '16');
            db_delete('users_roles')->condition($cond)->execute();
    }
    // setcookie('comp', 'set');
        drupal_goto(request_path());

}

function ors_role_assign(){
if((!isset($_COOKIE['Drupal_visitor_entr'])) || (!isset($_COOKIE['Drupal_visitor_compe']))){
    setrawcookie('Drupal_visitor_compe', rawurlencode('access'), REQUEST_TIME + 3600, '/');
    setrawcookie('Drupal_visitor_entr', rawurlencode('access'), REQUEST_TIME + 3600, '/');
    global $user;
    $firm_p_roles = ors_fetch_users_role($_SERVER[HTTP_PERSON_ID]);
    $temp = array(t('APs'), t('Associates'), t('BAs'), t('Directors'), t('EMs'), t('Knowledge'), t('Office IT'), t('Principals'), t('Prof Spprt'), t('Short Term'), );
    $ors_ent = variable_get('e_roles');
    $ors_ent = explode(',', $ors_ent);
    $ors_comp = variable_get('c_roles');
    $ors_comp = explode(',', $ors_comp);
    $ent_roles = array();
    $comp_roles = array();
    foreach ($ors_ent as $key => $value) {
        $ent_roles[] = $temp[$value];
    }
    foreach ($ors_comp as $key => $value) {
        $comp_roles[] = $temp[$value];
    }
    if((in_array($firm_p_roles['POSITION_GROUP'], $ent_roles)) && (!in_array('ors entrepreneur user', $user->roles))){
        if (!in_array('ors entrepreneur user', $user->roles)){
        ors_ent_role_access($user);
    }
    }
    elseif((!in_array($firm_p_roles['POSITION_GROUP'], $ent_roles)) && in_array('ors entrepreneur user', $user->roles)){
            if (in_array('ors entrepreneur user', $user->roles)){
            ors_ent_role_denial($user);
            // user_cooke_delete('entvalue');
            }
        }

    if((in_array($firm_p_roles['POSITION_GROUP'], $comp_roles)) && (!in_array('ors compete to win user', $user->roles))){
        if (!in_array('ors compete to win user', $user->roles)){
        ors_comp_role_access($user);
    }
    }
    elseif(!(in_array($firm_p_roles['POSITION_GROUP'], $comp_roles)) && in_array('ors compete to win user', $user->roles)){
            if (in_array('ors compete to win user', $user->roles)){
                ors_comp_role_denial($user);
                // user_cooke_delete('compvalue');
        }
    }
}
}
